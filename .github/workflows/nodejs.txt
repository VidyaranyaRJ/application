name: Destroy and Recreate Node.js App on EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force complete rebuild'
        required: false
        default: 'false'
        type: boolean

jobs:
  deploy:
    name: Destroy and Recreate on EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "🛑 Stopping and cleaning existing app..."
            pm2 stop all || true
            pm2 delete all || true
            sudo systemctl stop nginx || true
            rm -rf ~/myapp || true

            echo "📦 Updating system packages..."
            sudo apt update -y
            sudo apt install -y git curl nginx

            echo "🔧 Installing Node.js and PM2..."
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt install -y nodejs
            sudo npm install -g pm2

            echo "📥 Cloning repo and installing dependencies..."
            git clone -b main https://github.com/VidyaranyaRJ/application.git ~/myapp
            cd ~/myapp/nodejs
            npm install

            echo "🚀 Starting app with PM2 and configuring startup..."
            pm2 start index.js --name "node-app"
            pm2 save

            # Fix PM2 startup to persist after reboot
            pm2 unstartup systemd || true
            pm2 startup systemd -u $USER --hp $HOME
            sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u $USER --hp $HOME
            pm2 save

            echo "🌐 Setting up NGINX reverse proxy..."
            sudo tee /etc/nginx/sites-available/default > /dev/null <<EOL
            server {
              listen 80;
              location / {
                proxy_pass http://localhost:3000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade \$http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host \$host;
                proxy_cache_bypass \$http_upgrade;
              }
            }
            EOL

            echo "🔄 Restarting NGINX..."
            sudo systemctl restart nginx

            echo "✅ Deployment completed and app will restart automatically on reboot."
